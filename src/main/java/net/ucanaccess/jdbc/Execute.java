/*
Copyright (c) 2012 Marco Amadei.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
USA

You can contact Marco Amadei at amadei.mar@gmail.com.

*/
package net.ucanaccess.jdbc;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class Execute extends AbstractExecute {
	public Execute(UcanaccessPreparedStatement statement) {
		super(statement);
	}
	
	public Execute(UcanaccessStatement statement, String sql) {
		super(statement, sql);
	}
	
	public Execute(UcanaccessStatement statement, String sql,
			int autoGeneratedKeys) {
		super(statement, sql, autoGeneratedKeys);
	}
	
	public Execute(UcanaccessStatement statement, String sql, int[] indexes) {
		super(statement, sql, indexes);
	}
	
	public Execute(UcanaccessStatement statement, String sql,
			String[] columnNames) {
		super(statement, sql, columnNames);
	}
	
	public boolean execute() throws SQLException {
		return (Boolean) executeBase();
	}
	
	@Override
	public Object executeWrapped() throws SQLException {
		Statement w = super.getWrappedStatement();
		switch (commandType) {
		case PREPARED_STATEMENT:
			return ((PreparedStatement) w).execute();
		case NO_ARGUMENTS:
			return w.execute(sql);
		case WITH_COLUMNS_NAME:
			return w.execute(sql, columnNames);
		case WITH_AUTO_GENERATED_KEYS:
			return w.execute(sql, autoGeneratedKeys);
		case WITH_INDEXES:
			return w.execute(sql, indexes);
		default:
			return false;
		}
	}
}
